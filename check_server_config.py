#!/usr/bin/env python3
"""
Script para verificar la configuraci√≥n del servidor y diagnosticar problemas
"""
import requests
import json
from config import config

def check_local_server():
    """Verificar servidor local"""
    print("üîç Verificando servidor local...")
    
    # Verificar si el servidor local est√° corriendo
    local_urls = [
        "http://localhost:8025",
        "http://127.0.0.1:8025",
        "http://0.0.0.0:8025"
    ]
    
    for url in local_urls:
        try:
            response = requests.get(f"{url}/", timeout=5)
            print(f"‚úÖ {url} - Status: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"   Response: {data}")
        except Exception as e:
            print(f"‚ùå {url} - Error: {e}")

def check_images_endpoint():
    """Verificar endpoint de im√°genes"""
    print(f"\nüîç Verificando endpoint /images...")
    
    endpoints = [
        "http://localhost:8025/images",
        "http://localhost:8025/images/",
    ]
    
    for url in endpoints:
        try:
            response = requests.get(url, timeout=5)
            print(f"‚úÖ {url} - Status: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"   Total images: {data.get('pagination', {}).get('total', 'N/A')}")
        except Exception as e:
            print(f"‚ùå {url} - Error: {e}")

def check_template_endpoints():
    """Verificar endpoints de templates"""
    print(f"\nüîç Verificando endpoints de templates...")
    
    endpoints = [
        "http://localhost:8025/photos",
        "http://localhost:8025/ranking"
    ]
    
    for url in endpoints:
        try:
            response = requests.get(url, timeout=5)
            print(f"‚úÖ {url} - Status: {response.status_code}")
            
            # Verificar que el HTML contenga las URLs din√°micas
            if response.status_code == 200:
                content = response.text
                if "window.location.protocol" in content:
                    print(f"   ‚úÖ Contiene URLs din√°micas")
                else:
                    print(f"   ‚ùå No contiene URLs din√°micas")
                    
        except Exception as e:
            print(f"‚ùå {url} - Error: {e}")

def show_config():
    """Mostrar configuraci√≥n actual"""
    print(f"\nüìã Configuraci√≥n actual:")
    print(f"   API_HOST: {config.API_HOST}")
    print(f"   API_PORT: {config.API_PORT}")
    print(f"   API_PROTOCOL: {config.API_PROTOCOL}")
    print(f"   Base URL: {config.get_api_base_url()}")

def show_server_info():
    """Mostrar informaci√≥n del servidor basada en los logs"""
    print(f"\nüìä Informaci√≥n del servidor (basada en tus logs):")
    print(f"   ‚úÖ Servidor corriendo en: http://0.0.0.0:8025")
    print(f"   ‚úÖ Recibiendo requests a: /images")
    print(f"   ‚ö†Ô∏è  Respuesta: 307 Temporary Redirect")
    print(f"\nüí° El redirect 307 es normal - FastAPI redirige /images a /images/")

def show_next_steps():
    """Mostrar pr√≥ximos pasos"""
    print(f"\nüéØ PR√ìXIMOS PASOS:")
    print(f"1. Tu servidor local est√° funcionando correctamente")
    print(f"2. Los templates ahora usan URLs din√°micas")
    print(f"3. Para producci√≥n, aseg√∫rate de que:")
    print(f"   ‚Ä¢ Tu servidor HTTPS est√© corriendo en el puerto 443")
    print(f"   ‚Ä¢ O configura un proxy reverso (nginx/apache)")
    print(f"   ‚Ä¢ O usa un servicio como Cloudflare")
    
    print(f"\nüß™ PARA PROBAR:")
    print(f"1. Visita: http://localhost:8025/photos")
    print(f"2. Abre DevTools (F12) ‚Üí Console")
    print(f"3. Verifica que no hay errores de Mixed Content")
    print(f"4. La API URL deber√≠a ser: http://localhost:8025/images")

def main():
    print("üîß VERIFICACI√ìN DE CONFIGURACI√ìN DEL SERVIDOR")
    print("=" * 60)
    
    show_config()
    show_server_info()
    check_local_server()
    check_images_endpoint()
    check_template_endpoints()
    show_next_steps()

if __name__ == "__main__":
    main()